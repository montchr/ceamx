;;; ceamx-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:



;;; Generated autoloads from ../lisp/lib-common.el

(register-definition-prefixes "../lisp/lib-common" '("add-" "after!" "appendq!" "cmd!" "cmx-" "defadvice!" "delq!" "prependq!" "pushnew!" "remove-hook!" "setq-hook!" "undefadvice!" "unsetq-hook!"))


;;; Generated autoloads from ../lisp/lib-completion.el

(register-definition-prefixes "../lisp/lib-completion" '("+corfu-visible-p"))


;;; Generated autoloads from ../lisp/lib-editor.el

(register-definition-prefixes "../lisp/lib-editor" '("+default-electric-pairs" "cmx-electric-pair-add-local-pairs"))


;;; Generated autoloads from ../lisp/lib-files.el

(register-definition-prefixes "../lisp/lib-files" '("cmx"))


;;; Generated autoloads from ../lisp/lib-gui.el

(register-definition-prefixes "../lisp/lib-gui" '("cmx/"))


;;; Generated autoloads from ../lisp/lib-hydras.el

(register-definition-prefixes "../lisp/lib-hydras" '("cmx-hydra-" "enter-hydra!"))


;;; Generated autoloads from ../lisp/lib-keys.el

(register-definition-prefixes "../lisp/lib-keys" '("cmx"))


;;; Generated autoloads from ../lisp/lib-keys-evil.el

(autoload 'cmx/save-and-kill-this-buffer "../lisp/lib-keys-evil" "\
Save and kill the current buffer." t)
(autoload '+evil/window-split-and-follow "../lisp/lib-keys-evil" "\
Split current window horizontally, then focus new window.
If `evil-split-window-below' is non-nil, the new window isn't focused." t)
(autoload '+evil/window-vsplit-and-follow "../lisp/lib-keys-evil" "\
Split current window vertically, then focus new window.
If `evil-vsplit-window-right' is non-nil, the new window isn't focused." t)
(autoload '+evil--embrace-get-pair "../lisp/lib-keys-evil" "\


(fn CHAR)")
(autoload '+evil--embrace-escaped "../lisp/lib-keys-evil" "\
Backslash-escaped surround character support for embrace.")
(autoload '+evil--embrace-elisp-fn "../lisp/lib-keys-evil" "\
Elisp function support for embrace.")
(autoload '+evil--embrace-angle-brackets "../lisp/lib-keys-evil" "\
Type/generic angle brackets.")
(evil-define-operator +evil-delete (beg end type register yank-handler) "\
A wrapper around `evil-delete' for `wgrep' buffers that will invoke
`wgrep-mark-deletion' on lines you try to delete." (interactive "<R><x><y>") (condition-case _ex (evil-delete beg end type register yank-handler) ('text-read-only (evil-apply-on-block (lambda (beg _) (goto-char beg) (call-interactively #'wgrep-mark-deletion)) beg (1- end) nil))))
(register-definition-prefixes "../lisp/lib-keys-evil" '("+evil" "def-evil-pair-object!"))


;;; Generated autoloads from ../lisp/lib-lsp.el

(register-definition-prefixes "../lisp/lib-lsp" '("+lsp-defer-server-shutdown-a"))


;;; Generated autoloads from ../lisp/lib-magit.el

(register-definition-prefixes "../lisp/lib-magit" '("+magit"))


;;; Generated autoloads from ../lisp/lib-text.el

(defvar cmx-point-in-comment-functions nil "\
List of functions to run to determine if point is in a comment.

Each function takes one argument: the position of the point. Stops on the first
function to return non-nil.

Used by `cmx-point-in-comment-p'.")
(autoload 'cmx-point-in-comment-p "../lisp/lib-text" "\
Return non-nil if POS is in a comment.
POS defaults to the current position.

(fn &optional POS)")


;;; Generated autoloads from ../lisp/lib-ui-theme.el

(register-definition-prefixes "../lisp/lib-ui-theme" '("cmx-" "dark" "light"))


;;; Generated autoloads from ../lisp/lib-ui-treemacs.el

(autoload 'cmx/treemacs/toggle "../lisp/lib-ui-treemacs" "\
Initialize or toggle treemacs.

Ensures that only the current project is present and all other projects have
been removed.

Use `treemacs' command for original functionality." t)

;;; End of scraped data

(provide 'ceamx-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; ceamx-autoloads.el ends here
